这里其实是一个Linux环境配置问题，Linux的工作方式以及它的相关概念（包，头，编译，依赖，扩展，二进制等等）

graphite:
(yum -y install python-setuptools python-setuptools-devel ) ?
easy_install pip

准备工具
(?yum groupinstall "Development tools")
(?
yum install python-devel
yum install zlib-devel
yum install bzip2-devel
yum install openssl-devel
yum install ncurses-devel
yum install sqlite-devel
)

安装Python2.7
(https://github.com/h2oai/h2o-2/wiki/Installing-python-2.7-on-centos-6.3.-Follow-this-sequence-exactly-for-centos-machine-only)
cd /opt
wget --no-check-certificate https://www.python.org/ftp/python/2.7.6/Python-2.7.6.tar.xz
tar xf Python-2.7.6.tar.xz
cd Python-2.7.6
./configure --prefix=/usr/local --enable-shared(这个安装mod_wsgi时要用到)
make && make altinstall
echo $PATH
which python
Python -V （？python: error while loading shared libraries: libpython2.7.so.1.0: cannot open shared object file: No such file or directory
 find /usr -name "libpython2.7.so.1.0"
 /usr/local/lib/libpython2.7.so.1.0
 vim /etc/ld.so.conf
 /sbin/ldconfig -v
）
ln -s /usr/local/bin/python2.7 /usr/bin/python(这一步如果不做，pip install twisted  时会报python setup.py egg_info" failed) 
（因为yum是不兼容 Python 2.7的，所以yum不能正常工作，我们需要指定 yum 的Python版本
#vi /usr/bin/yum  
将文件头部的
#!/usr/bin/python
改成
#!/usr/bin/python2.6.6）

安装carbon
# sudo pip install twisted
(?ImportError: No module named pkg_resources
wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | python 结果：
Installed /usr/local/lib/python2.7/site-packages/setuptools-19.2-py2.7.egg
?pip==7.1.2' distribution was not found and is required by the application
wget --no-check-certificate  https://bootstrap.pypa.io/get-pip.py
python get-pip.py(python2.7.9之前版本默认不带pip) 
)
# cd /tmp
# git clone https://github.com/graphite-project/carbon.git
# cd /tmp/carbon
# sudo python setup.py install  （修改setup.py脚本可自定义安装目录）
# cd /tmp
# git clone https://github.com/graphite-project/whisper.git
# cd /tmp/whisper
# sudo python setup.py install （修改setup.py脚本可自定义安装目录）

安装graphite-web
# git clone https://github.com/graphite-project/graphite-web.git
# cd /tmp/graphite-web
python setup.py install   执行前需检查环境是否满足（修改setup.py脚本可自定义安装目录）
# python check-dependencies.py
# sudo yum install cairo-devel（现在yum已经是2.6的了 这一步可以不做）
# sudo yum install pycairo-devel（现在yum已经是2.6的了，这一步可以不做）
（？# sudo pip install django
（？Django1.7版本以上不支持这个命令 work的方式之一是重装django低版本，1.5版本较佳
$ wget  www.djangoproject.com/m/releases/1.5/Django-1.5.4.tar.gz
$ tar zxvf Django-1.5.4.tar.gz 
$ cd Django-1.5.4
$ python setup.py install
？# sudo pip install django-tagging
？连带需要pip uninstall django-tagging   pip install "django-tagging<0.4"
）
# sudo pip install pyparsing
# sudo pip install python-memcached  非必须
# sudo pip install txamqp            非必须
# sudo pip install pytz
# cd /tmp/graphite-web
# python check-dependencies.py
(
wget http://cairographics.org/releases/py2cairo-1.10.0.tar.bz2
tar -jxvf py2cairo-1.10.0.tar.bz2
./waf configure
(?pkgconfig error
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
)
(? Could not find the python development headers
CFLAGS="-l/usr/local/include/python2.7 -l/usr/local/bin" LDFLAGS="-lm -ldl -lutil" ./waf configure
)
(?'cairo' >= 1.10.0           : not found  
wget http://cairographics.org/releases/cairo-1.10.0.tar.gz
tar -zxvf cairo-1.10.0.tar.gz
./configure
make
make install
安装完执行./waf configure 如果仍报cairo 1.10.0 not found 需要执行：
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
)
./waf build
./waf install
)
python setup.py install （修改setup.py脚本可自定义安装目录）


主要是carbon，whisper，graphite-web的Python setting.py install  其他都是预环境的准备
以下配置则是graphite自己的应用配置

数据库初始化
# cd /opt/graphite
# export PYTHONPATH=$PYTHONPATH:`pwd`/webapp
# django-admin.py syncdb --settings=graphite.settings
（？Django1.7版本以上不支持这个命令 work的方式之一是重装django低版本，1.5版本较佳
$ wget  www.djangoproject.com/m/releases/1.5/Django-1.5.4.tar.gz
$ tar zxvf Django-1.5.4.tar.gz 
$ cd Django-1.5.4
$ python setup.py install
连带需要pip uninstall django-tagging   pip install "django-tagging<0.4"）


Graphite Web配置：
/data/graphite/webapp/graphite/local_settings.py.example  配置文件

Graphite Web应用中包含默认的仪表盘和图表模版。拷贝样例配置文件：
# cd /data/graphite/conf
# cp dashboard.conf.example dashboard.conf
# cp graphTemplates.conf.example graphTemplates.conf



启动graphite web界面（这种方式测试用了，目前直接在Apache里）
# cd /opt/graphite
# PYTHONPATH=`pwd`/storage/whisper ./bin/run-graphite-devel-server.py --port=8085 --libs=`pwd`/webapp /opt/graphite 1>/opt/graphite/storage/log/webapp/process.log 2>&1 &
# tail -f /opt/graphite/storage/log/webapp/process.log

安装WSGI：
yum install httpd-devel（--with-apxs=apxs 需要）
https://github.com/GrahamDumpleton/mod_wsgi/releases
wget --no-check-certificate https://github.com/GrahamDumpleton/mod_wsgi/archive/4.4.21.tar.gz
cd 到文件目录
which Python 
which apxs
./configure --with-python=python目录 --with-apxs=apxs目录
make
make install
Apache主配置加入 LoadModule wsgi_module modules/mod_wsgi.so
apache log(?Permission denied: mod_wsgi (pid=26962): Unable to connect to WSGI \
 daemon process '<process-name>' on '/etc/httpd/logs/wsgi.26957.0.1.sock' 
 graphite.conf虚拟主机段外加入 WSGISocketPrefix run/wsgi
 )

graphite  WSGI配置：
cp /data/graphite/conf/graphite.wsgi.example /data/graphite/conf/graphite.wsgi
chmod 666  /data/graphite/storage/log/webapp/
vim /data/graphite/conf/graphite.wsgi        （如果自定义目录需更改）
chmod -R 777 /data/graphite/storage/log/      （如果报log没权限需要）


//start graphite.conf
Listen 13333

<VirtualHost *:13333>
  ServerName graphite
  DocumentRoot "/opt/graphite/webapp"
  ErrorLog /var/log/httpd/graphite_error.log
  CustomLog /var/log/httpd/graphite_access.log common

  WSGIDaemonProcess graphite processes=5 threads=5 display-name='%{GROUP}' inactivity-timeout=120
  WSGIProcessGroup graphite

  WSGIScriptAlias / /opt/graphite/conf/graphite.wsgi


  Alias /content/ /opt/graphite/webapp/content

  SetHandler None

  Alias /media/ "/usr/local/lib/python2.7/site-packages/django/contrib/admin/media/"

  SetHandLer None

  <Directory /opt/graphite/conf/>
     Order deny,allow
     Allow from all
  </Directory>

</VirtualHost>

WSGISocketPrefix run/wsgi
//end graphite conf
